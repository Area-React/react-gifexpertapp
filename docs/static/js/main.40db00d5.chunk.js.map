{"version":3,"sources":["tests/components/AddCategory.js","helpers/getGifs.js","tests/components/GifGridItem.js","tests/components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","console","log","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,mCAEI,sBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAsBO,OACzCN,EAAc,OAOb,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SArBU,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,e,+BCRdG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAWH,GAD9C,8DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAWZM,GAXY,4CAAH,sDCCXO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAKjC,OACI,sBAAKc,UAAW,yDAAhB,UAEI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCPCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACtB,ECFwB,SAAEA,GAC1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNxB,EAASC,GACJwB,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IACGqB,EDdiBO,CAAc5B,GAA/BO,EAAP,EAAOA,KAAMa,EAAb,EAAaA,QAEb,OACI,qCACI,6BAAMpB,IACJoB,GAAW,wCACb,qBAAKJ,UAAU,YAAf,SAEQT,EAAKE,KAAK,SAAAC,GAAG,OACT,cAAC,EAAD,eAESA,GADGA,EAAIC,aEyCzBkB,EApDa,WAGxB,MAAsC3C,mBAAS,CAAC,cAAhD,mBAAQ4C,EAAR,KAAoB7C,EAApB,KAYA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAE/B,uBAgBA,6BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAaA,GADLA,Y,MCrCpC+B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.40db00d5.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        // console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log('Sumbit hecho')\r\n        if ( inputValue.trim().length > 2) {\r\n           setCategories( cats => [ inputValue,  ...cats ] );  \r\n           setInputValue(' ');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <h1> { inputValue } </h1> */}\r\n            <form onSubmit={ handleSubmit }>\r\n                <input \r\n                    type=\"text\"\r\n                    value= {inputValue}\r\n                    onChange={ handleInputChange }\r\n                />                \r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n    export const getGifs = async ( category ) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&api_key=m3xN7aW3sqGXcKrb1uRt6JnY2S6A5h93&limit=5`;\r\n        const resp = await fetch( url );\r\n        const {data} = await resp.json();\r\n        const gifs = data.map ( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n        return gifs;\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n    \r\n    // console.log(title, url);\r\n    // console.log(props);\r\n\r\n    return (\r\n        <div className =\"card animate__animated animate__bounce animate__fadeIn\">\r\n            {/* {img.title} */}\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const {data, loading} = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n            { loading && <p>Loading</p> }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    data.map( img => (\r\n                        <GifGridItem \r\n                            key = { img.id }\r\n                            { ...img } \r\n                        />\r\n                    ) )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( category )\r\n            .then(imgs => {\r\n                console.log(imgs);\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n    }, [category])\r\n    return state;\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './tests/components/AddCategory';\r\nimport { GifGrid } from './tests/components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [ categories, setCategories ] = useState(['One Punch']);\r\n    // const handleAdd = () => {\r\n    //     // 'HunterXHunter'\r\n    //     // categories.push('HunterXHunter');\r\n    //     // console.log(categories);\r\n    //     setCategories( ['HunterXHunter', ...categories ] );\r\n    //     setCategories( cats => [  ...categories, 'HunterXHunter' ] );\r\n    //     // console.log(categories);\r\n    // }\r\n\r\n    // console.log(categories);\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories }/>\r\n            {/* <AddCategory /> */}\r\n            <hr />\r\n{/* \r\n            <button\r\n                onClick={ \r\n                    handleAdd\r\n                }\r\n            >\r\n            Agregar\r\n            </button> */}\r\n\r\n            {/* <ol>\r\n                <li>One</li>\r\n                <li>Samurai</li>\r\n                <li>Dragon</li>\r\n            </ol> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key = { category } \r\n                            category = { category } \r\n                        />\r\n                        // <li key = { category }> { category }</li>\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n// const divRoot = document.querySelector('#root');\n\nReactDOM.render( \n    <GifExpertApp />, \n    document.getElementById('root')\n);\n\n// ReactDOM.render( <GifExpertApp linea = \"<hr />\" />, divRoot );\n"],"sourceRoot":""}